<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kidd.opdb.mapper.UrlScanPoMapper" >
  <resultMap id="BaseResultMap" type="com.kidd.opdb.model.UrlScanPo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url_raw" property="urlRaw" jdbcType="VARCHAR" />
    <result column="url_domain" property="urlDomain" jdbcType="VARCHAR" />
    <result column="url_param" property="urlParam" jdbcType="VARCHAR" />
    <result column="url_keyword" property="urlKeyword" jdbcType="VARCHAR" />
    <result column="injectble" property="injectble" jdbcType="TINYINT" />
    <result column="mail_count" property="mailCount" jdbcType="INTEGER" />
    <result column="mobile_count" property="mobileCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, url_raw, url_domain, url_param, url_keyword, injectble, mail_count, mobile_count
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_url_scan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllDomain" resultType="string">
    select
    url_domain
    from tbl_url_scan
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_url_scan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kidd.opdb.model.UrlScanPo" >
    insert into tbl_url_scan (id, url_raw, url_domain, 
      url_param, url_keyword, injectble, 
      mail_count, mobile_count)
    values (#{id,jdbcType=INTEGER}, #{urlRaw,jdbcType=VARCHAR}, #{urlDomain,jdbcType=VARCHAR}, 
      #{urlParam,jdbcType=VARCHAR}, #{urlKeyword,jdbcType=VARCHAR}, #{injectble,jdbcType=TINYINT}, 
      #{mailCount,jdbcType=INTEGER}, #{mobileCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kidd.opdb.model.UrlScanPo" >
    insert into tbl_url_scan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="urlRaw != null" >
        url_raw,
      </if>
      <if test="urlDomain != null" >
        url_domain,
      </if>
      <if test="urlParam != null" >
        url_param,
      </if>
      <if test="urlKeyword != null" >
        url_keyword,
      </if>
      <if test="injectble != null" >
        injectble,
      </if>
      <if test="mailCount != null" >
        mail_count,
      </if>
      <if test="mobileCount != null" >
        mobile_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="urlRaw != null" >
        #{urlRaw,jdbcType=VARCHAR},
      </if>
      <if test="urlDomain != null" >
        #{urlDomain,jdbcType=VARCHAR},
      </if>
      <if test="urlParam != null" >
        #{urlParam,jdbcType=VARCHAR},
      </if>
      <if test="urlKeyword != null" >
        #{urlKeyword,jdbcType=VARCHAR},
      </if>
      <if test="injectble != null" >
        #{injectble,jdbcType=TINYINT},
      </if>
      <if test="mailCount != null" >
        #{mailCount,jdbcType=INTEGER},
      </if>
      <if test="mailCount != null" >
        #{mobileCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="batchInsert">
    insert into tbl_url_scan
    (url_raw,url_domain,url_param,url_keyword,injectble,mail_count,mobile_count)
    VALUES
    <foreach collection ="list" item="item" index= "index" separator =",">
      (
      #{item.urlRaw},
      #{item.urlDomain},
      #{item.urlParam},
      #{item.urlKeyword},
      #{item.injectble},
      #{item.mailCount},
      #{item.mobileCount}
      )
    </foreach >
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kidd.opdb.model.UrlScanPo" >
    update tbl_url_scan
    <set >
      <if test="urlRaw != null" >
        url_raw = #{urlRaw,jdbcType=VARCHAR},
      </if>
      <if test="urlDomain != null" >
        url_domain = #{urlDomain,jdbcType=VARCHAR},
      </if>
      <if test="urlParam != null" >
        url_param = #{urlParam,jdbcType=VARCHAR},
      </if>
      <if test="urlKeyword != null" >
        url_keyword = #{urlKeyword,jdbcType=VARCHAR},
      </if>
      <if test="injectble != null" >
        injectble = #{injectble,jdbcType=TINYINT},
      </if>
      <if test="mailCount != null" >
        mail_count = #{mailCount,jdbcType=INTEGER},
      </if>
      <if test="mobileCount != null" >
        mobile_count = #{mobileCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kidd.opdb.model.UrlScanPo" >
    update tbl_url_scan
    set url_raw = #{urlRaw,jdbcType=VARCHAR},
      url_domain = #{urlDomain,jdbcType=VARCHAR},
      url_param = #{urlParam,jdbcType=VARCHAR},
      url_keyword = #{urlKeyword,jdbcType=VARCHAR},
      injectble = #{injectble,jdbcType=TINYINT},
      mail_count = #{mailCount,jdbcType=INTEGER},
      mobile_count = #{mobileCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByDomain">
    update tbl_url_scan
    set injectble = 1,
    mail_count= #{mailCount}
     where url_domain like '%${urlDomain}%'
  </update>
</mapper>